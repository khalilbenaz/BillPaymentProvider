#!/bin/bash

# üöÄ Script de d√©ploiement BillPaymentProvider v2.0
# Utilisation: ./deploy.sh [environment]
# Environnements: development, staging, production

set -e

# Configuration
APP_NAME="BillPaymentProvider"
VERSION="2.0.0"
ENVIRONMENT=${1:-development}

echo "üöÄ D√©ploiement de $APP_NAME v$VERSION - Environnement: $ENVIRONMENT"
echo "=================================================================="

# V√©rification des pr√©requis
echo "üìã V√©rification des pr√©requis..."
if ! command -v dotnet &> /dev/null; then
    echo "‚ùå .NET 8.0 SDK requis"
    exit 1
fi

if ! command -v git &> /dev/null; then
    echo "‚ùå Git requis"
    exit 1
fi

echo "‚úÖ Pr√©requis valid√©s"

# Nettoyage
echo "üßπ Nettoyage des artefacts pr√©c√©dents..."
rm -rf ./publish
find . -name "bin" -type d -exec rm -rf {} + 2>/dev/null || true
find . -name "obj" -type d -exec rm -rf {} + 2>/dev/null || true

# Restauration des d√©pendances
echo "üì¶ Restauration des d√©pendances..."
cd BillPaymentProvider
dotnet restore

# Tests de s√©curit√© rapides
echo "üîí V√©rification de s√©curit√©..."
if grep -r "password.*=.*admin" . --exclude-dir=bin --exclude-dir=obj 2>/dev/null; then
    echo "‚ö†Ô∏è  Mots de passe en dur d√©tect√©s - V√©rifiez la configuration"
fi

# Configuration selon l'environnement
echo "‚öôÔ∏è  Configuration pour $ENVIRONMENT..."
case $ENVIRONMENT in
    "production")
        echo "üè≠ Configuration PRODUCTION"
        BUILD_CONFIG="Release"
        
        # V√©rifications production
        if [ ! -f "appsettings.Production.json" ]; then
            echo "‚ö†Ô∏è  appsettings.Production.json manquant"
        fi
        
        echo "üîê Points de s√©curit√© PRODUCTION √† v√©rifier:"
        echo "   - HTTPS activ√©"
        echo "   - Cl√©s JWT s√©curis√©es"
        echo "   - Base de donn√©es production configur√©e"
        echo "   - Logs externalis√©s"
        ;;
    "staging")
        echo "üß™ Configuration STAGING"
        BUILD_CONFIG="Release"
        ;;
    *)
        echo "üõ†Ô∏è  Configuration DEVELOPMENT"
        BUILD_CONFIG="Debug"
        ;;
esac

# Build
echo "üî® Compilation en mode $BUILD_CONFIG..."
dotnet build --configuration $BUILD_CONFIG --no-restore

# Tests rapides
echo "üß™ Tests rapides..."
if [ -f "BillPaymentProvider.Tests/BillPaymentProvider.Tests.csproj" ]; then
    dotnet test --configuration $BUILD_CONFIG --no-build
else
    echo "‚ö†Ô∏è  Aucun projet de test trouv√© - Tests manuels recommand√©s"
fi

# Publication
echo "üì¶ Publication de l'application..."
dotnet publish --configuration $BUILD_CONFIG --output ../publish --no-build

# V√©rification de la publication
echo "‚úÖ V√©rification de la publication..."
if [ ! -f "../publish/BillPaymentProvider.dll" ]; then
    echo "‚ùå √âchec de la publication"
    exit 1
fi

# Migration de base de donn√©es (si n√©cessaire)
if [ "$ENVIRONMENT" != "development" ]; then
    echo "üóÑÔ∏è  Migration de base de donn√©es..."
    # dotnet ef database update --configuration $BUILD_CONFIG
    echo "‚ö†Ô∏è  Migration manuelle requise si n√©cessaire"
fi

# Instructions de d√©ploiement
cd ..
echo ""
echo "üéâ Publication r√©ussie dans le dossier './publish'"
echo ""
echo "üìã Prochaines √©tapes selon l'environnement:"
echo ""

case $ENVIRONMENT in
    "production")
        echo "üè≠ PRODUCTION:"
        echo "   1. Sauvegarder la base de donn√©es actuelle"
        echo "   2. Configurer les variables d'environnement:"
        echo "      export ASPNETCORE_ENVIRONMENT=Production"
        echo "      export ASPNETCORE_URLS=https://+:443;http://+:80"
        echo "   3. Configurer le reverse proxy (nginx/IIS)"
        echo "   4. D√©marrer l'application:"
        echo "      cd publish && dotnet BillPaymentProvider.dll"
        echo "   5. V√©rifier le health check:"
        echo "      curl https://yourdomain.com/health"
        ;;
    "staging")
        echo "üß™ STAGING:"
        echo "   1. D√©ployer sur serveur de staging"
        echo "   2. Configurer les variables d'environnement"
        echo "   3. Ex√©cuter les tests d'int√©gration"
        echo "   4. Valider avec l'√©quipe QA"
        ;;
    *)
        echo "üõ†Ô∏è  DEVELOPMENT:"
        echo "   1. Lancer l'application:"
        echo "      cd publish && dotnet BillPaymentProvider.dll"
        echo "   2. Acc√©der √† l'API:"
        echo "      http://localhost:5163"
        echo "   3. Documentation Swagger:"
        echo "      http://localhost:5163/swagger"
        ;;
esac

echo ""
echo "üîí Utilisateurs par d√©faut:"
echo "   admin / Admin123!"
echo "   user / User123!"
echo "   manager / Manager123!"
echo ""
echo "üìö Documentation compl√®te dans README.md"
echo ""
echo "‚ú® D√©ploiement termin√© avec succ√®s!"
